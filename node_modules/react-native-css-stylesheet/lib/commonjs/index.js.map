{"version":3,"sources":["index.js"],"names":["isResponsiveKey","styleRegex","groupRegex","queryRegex","extractGroups","styleKey","groups","split","length","i","extractQuery","group","queries","validateAndExtract","styleCondition","toLowerCase","trim","error","results","msg","startsWith","endsWith","groupResults","conditions","breakFlag","j","query","queryResult","condition","common","indexOf","push","size","illegalPre","slice","illegalPost","lastIndexOf","illegal","isStyleActive","flag","Object","keys","isGroupActive","value","dimension","currentDimension","Dimensions","get","calculatedSize","formatStyles","style","formattedStyle","styleProperty","styleValue","calculateStyles","styles","stylesKey","finalStyles","key","responsiveStyle","insertedStyle","stylePropertyResult","Array","isArray","Error","create","responsiveStyles","stylesheet","StyleSheet","CssStyleSheet"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAqPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhPA;;AAiPA;;AACA;;;;;;;;AAhPA,MAAMA,eAAe,GACpB,yEADD;AAEA,MAAMC,UAAU,GACf,gGADD,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,sBAAnB;AACA,MAAMC,UAAU,GAAG,sBAAnB;;AAEA,MAAMC,aAAa,GAAIC,QAAD,IAAgC;AACrD,QAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAT,CAAeL,UAAf,CAAf;;AACA,MAAII,MAAM,IAAIA,MAAM,CAACE,MAAP,GAAgB,CAA9B,EAAiC;AAChC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,IAAI,CAAxC,EAA2C;AAC1C,UAAIA,CAAC,GAAG,CAAR,EAAW;AACVH,QAAAA,MAAM,CAACG,CAAD,CAAN,GAAa,IAAGH,MAAM,CAACG,CAAD,CAAI,EAA1B;AACA;;AACD,UAAIA,CAAC,GAAGH,MAAM,CAACE,MAAP,GAAgB,CAAxB,EAA2B;AAC1BF,QAAAA,MAAM,CAACG,CAAD,CAAN,GAAa,GAAEH,MAAM,CAACG,CAAD,CAAI,GAAzB;AACA;AACD;AACD;;AACD,SAAOH,MAAP;AACA,CAbD;;AAcA,MAAMI,YAAY,GAAIC,KAAD,IAA6B;AACjD,QAAMC,OAAO,GAAGD,KAAK,CAACJ,KAAN,CAAYJ,UAAZ,CAAhB;;AACA,MAAIS,OAAO,IAAIA,OAAO,CAACJ,MAAR,GAAiB,CAAhC,EAAmC;AAClC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,OAAO,CAACJ,MAA5B,EAAoCC,CAAC,IAAI,CAAzC,EAA4C;AAC3C,UAAIA,CAAC,GAAGG,OAAO,CAACJ,MAAR,GAAiB,CAAzB,EAA4B;AAC3BI,QAAAA,OAAO,CAACH,CAAD,CAAP,GAAc,GAAEG,OAAO,CAACH,CAAD,CAAI,GAA3B;AACA;AACD;AACD;;AACD,SAAOG,OAAP;AACA,CAVD;;AAYA,MAAMC,kBAAkB,GAAIC,cAAD,IAAoB;AAAA;;AAC9C,QAAMT,QAAQ,GAAGS,cAAH,aAAGA,cAAH,gDAAGA,cAAc,CAAEC,WAAhB,EAAH,0DAAG,sBAA+BC,IAA/B,EAAjB;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,OAAO,GAAG,EAAhB;;AACA,MAAI,CAACb,QAAD,IAAaA,QAAQ,CAACG,MAAT,KAAoB,CAArC,EAAwC;AACvCS,IAAAA,KAAK,CAACE,GAAN,GAAY,oBAAZ;AACA,GAFD,MAEO,IAAId,QAAQ,CAACe,UAAT,CAAoB,GAApB,KAA4Bf,QAAQ,CAACgB,QAAT,CAAkB,GAAlB,CAAhC,EAAwD;AAC9D,UAAMf,MAAM,GAAGF,aAAa,CAACC,QAAD,CAA5B;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,IAAI,CAAxC,EAA2C;AAC1C,YAAME,KAAK,GAAGL,MAAM,CAACG,CAAD,CAApB;AACA,YAAMa,YAAY,GAAG,EAArB;AACA,YAAMV,OAAO,GAAGF,YAAY,CAACC,KAAD,CAA5B;AACA,YAAMY,UAAU,GAAG,EAAnB;AACA,UAAIC,SAAS,GAAG,KAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACJ,MAA5B,EAAoCiB,CAAC,IAAI,CAAzC,EAA4C;AAC3C,cAAMC,KAAK,GAAGd,OAAO,CAACa,CAAD,CAArB;;AACA,YAAIC,KAAK,IAAIA,KAAK,CAAClB,MAAN,GAAe,CAA5B,EAA+B;AAC9B,gBAAMmB,WAAW,GAAG,sBAAU1B,UAAV,EAAsByB,KAAtB,CAApB;;AACA,cAAIC,WAAW,IAAIA,WAAW,CAACnB,MAAZ,GAAqB,CAAxC,EAA2C;AAC1C,gBAAIoB,SAAS,GAAGD,WAAW,CAAC,CAAD,CAA3B;;AACA,gBAAIA,WAAW,CAACnB,MAAZ,GAAqB,CAAzB,EAA4B;AAC3BoB,cAAAA,SAAS,IAAK,IAAGD,WAAW,CAAC,CAAD,CAAI,EAAhC;AACA;;AACD,kBAAME,MAAM,GAAGN,UAAU,CAACO,OAAX,CAAmBF,SAAnB,CAAf;;AACA,gBAAIC,MAAM,GAAG,CAAC,CAAd,EAAiB;AAChBZ,cAAAA,KAAK,CAACE,GAAN,GAAa,oDAAmDS,SAAU,MAAKjB,KAAM,EAArF;AACAa,cAAAA,SAAS,GAAG,IAAZ;AACA;AACA,aAJD,MAIO;AACND,cAAAA,UAAU,CAACQ,IAAX,CAAgBH,SAAhB;AACA;;AAED,gBAAID,WAAW,CAACnB,MAAZ,GAAqB,CAAzB,EAA4B;AAC3B,oBAAMwB,IAAI,GAAGL,WAAW,CAAC,CAAD,CAAxB;;AACA,kBAAI,CAAC,+BAAYK,IAAZ,CAAL,EAAwB;AACvBf,gBAAAA,KAAK,CAACE,GAAN,GAAa,kBAAiBa,IAAK,GAAnC;AACAR,gBAAAA,SAAS,GAAG,IAAZ;AACA;AACA;AACD;AACD,WAtBD,MAsBO;AACNP,YAAAA,KAAK,CAACE,GAAN,GAAa,mBAAkBO,KAAM,GAArC;AACAF,YAAAA,SAAS,GAAG,IAAZ;AAEA;AACA;;AACDF,UAAAA,YAAY,CAACS,IAAb,CAAkBJ,WAAlB;AACA;AACD;;AACD,UAAIH,SAAJ,EAAe;AACd;AACA;;AACDN,MAAAA,OAAO,CAACa,IAAR,CAAaT,YAAb;AACA;AACD,GAhDM,MAgDA;AACN,UAAMW,UAAU,GAAG5B,QAAQ,CAAC6B,KAAT,CAAe,CAAf,EAAkB7B,QAAQ,CAACyB,OAAT,CAAiB,GAAjB,CAAlB,CAAnB;AACA,UAAMK,WAAW,GAAG9B,QAAQ,CAAC6B,KAAT,CAAe7B,QAAQ,CAAC+B,WAAT,CAAqB,GAArB,IAA4B,CAA3C,CAApB;AACA,UAAMC,OAAO,GAAGJ,UAAU,IAAIE,WAA9B;AACAlB,IAAAA,KAAK,CAACE,GAAN,GAAa,0BAAyBkB,OAAQ,gBAAehC,QAAS,IAAtE;AACA;;AACD,SAAO;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACA,CA7DD;;AA+DO,MAAMoB,aAAa,GAAIxB,cAAD,IAAoB;AAChD,QAAM;AAAEI,IAAAA,OAAO,GAAG,EAAZ;AAAgBD,IAAAA,KAAK,GAAG;AAAxB,MACLJ,kBAAkB,CAACC,cAAD,CAAlB,IAAsC,EADvC;AAEA,MAAIyB,IAAI,GAAG,KAAX;;AACA,MACCtB,KAAK,IACLuB,MAAM,CAACC,IAAP,CAAYxB,KAAZ,EAAmBT,MAAnB,KAA8B,CAD9B,IAEAU,OAFA,IAGAA,OAAO,CAACV,MAAR,GAAiB,CAJlB,EAKE;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,OAAO,CAACV,MAA5B,EAAoCC,CAAC,IAAI,CAAzC,EAA4C;AAC3C,YAAME,KAAK,GAAGO,OAAO,CAACT,CAAD,CAArB;AACA,UAAIiC,aAAa,GAAG,IAApB;;AACA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,KAAK,CAACH,MAA1B,EAAkCiB,CAAC,IAAI,CAAvC,EAA0C;AACzC,cAAMC,KAAK,GAAGf,KAAK,CAACc,CAAD,CAAnB;AACA,cAAMG,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAvB;AACA,YAAIiB,KAAK,GAAGjB,KAAK,CAAC,CAAD,CAAjB;AACA,cAAMkB,SAAS,GAAGlB,KAAK,CAAC,CAAD,CAAvB;;AACA,YAAIA,KAAK,CAAClB,MAAN,GAAe,CAAnB,EAAsB;AACrBmC,UAAAA,KAAK,GAAGjB,KAAK,CAAC,CAAD,CAAb;AACA;;AACD,YACCE,SAAS,KAAK,aAAd,IACAe,KAAK,KAAK,0CAFX,EAGE;AACDD,UAAAA,aAAa,GAAGA,aAAa,IAAI,IAAjC;AACA,SALD,MAKO,IACN,CAACd,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,KAAtC,MACCgB,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,OADzC,CADM,EAGL;AACD,gBAAMC,gBAAgB,GACrBC,wBAAWC,GAAX,CAAe,QAAf,EAAyBH,SAAzB,CADD;;AAEA,gBAAMI,cAAc,GAAG,iCAAcL,KAAd,CAAvB;;AACA,cAAIf,SAAS,KAAK,KAAlB,EAAyB;AACxBc,YAAAA,aAAa,GACZA,aAAa,IAAIG,gBAAgB,IAAIG,cADtC;AAEA,WAHD,MAGO;AACNN,YAAAA,aAAa,GACZA,aAAa,IAAIG,gBAAgB,GAAGG,cADrC;AAEA;AACD,SAdM,MAcA;AACNN,UAAAA,aAAa,GAAGA,aAAa,IAAI,KAAjC;AACA;;AACD,YAAI,CAACA,aAAL,EAAoB;AACnB;AACA;AACD;;AACD,UAAIA,aAAJ,EAAmB;AAClBH,QAAAA,IAAI,GAAG,IAAP;AACA;AACA;AACD;AACD;;AACD,SAAO;AAAEtB,IAAAA,KAAF;AAASsB,IAAAA;AAAT,GAAP;AACA,CAtDM;;;;AAwDA,MAAMU,YAAY,GAAIC,KAAD,IAAW;AACtC,QAAM7C,QAAQ,GAAGmC,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAjB;AACA,QAAMC,cAAc,GAAG,EAAvB;;AACA,OAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACG,MAA7B,EAAqCC,CAAC,IAAI,CAA1C,EAA6C;AAC5C,UAAM2C,aAAa,GAAG/C,QAAQ,CAACI,CAAD,CAA9B;AACA,UAAM4C,UAAU,GAAGH,KAAK,CAACE,aAAD,CAAxB;AACA,UAAMpB,IAAI,GAAGqB,UAAb;;AACA,QAAI,+BAAYrB,IAAZ,CAAJ,EAAuB;AACtB,YAAMgB,cAAc,GAAG,iCAAchB,IAAd,CAAvB;AACAmB,MAAAA,cAAc,CAACC,aAAD,CAAd,GAAgCJ,cAAhC;AACA,KAHD,MAGO;AACNG,MAAAA,cAAc,CAACC,aAAD,CAAd,GAAgCC,UAAhC;AACA;AACD;;AACD,SAAOF,cAAP;AACA,CAfM;;;;AAiBP,SAASG,eAAT,CAAyBC,MAAzB,EAAiC;AAChC,QAAMC,SAAS,GAAGhB,MAAM,CAACC,IAAP,CAAYc,MAAZ,CAAlB;AACA,QAAME,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+C,SAAS,CAAChD,MAA9B,EAAsCC,CAAC,IAAI,CAA3C,EAA8C;AAC7C,UAAMiD,GAAG,GAAGF,SAAS,CAAC/C,CAAD,CAArB;AACA,UAAMyC,KAAK,GAAGK,MAAM,CAACG,GAAD,CAApB;AACA,UAAMP,cAAc,GAAG,EAAvB;AACA,QAAIQ,eAAe,GAAG,EAAtB;AACA,UAAMtD,QAAQ,GAAGmC,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAjB;;AACA,SAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,QAAQ,CAACG,MAA7B,EAAqCiB,CAAC,IAAI,CAA1C,EAA6C;AAC5C,UAAImC,aAAa,GAAG,IAApB;AACA,YAAMR,aAAa,GAAG/C,QAAQ,CAACoB,CAAD,CAA9B;AACA,YAAMoC,mBAAmB,GAAG,sBAC3B7D,eAD2B,EAE3BoD,aAF2B,CAA5B;AAIA,UAAIC,UAAJ;;AAEA,UAAIQ,mBAAmB,IAAIA,mBAAmB,CAACrD,MAApB,GAA6B,CAAxD,EAA2D;AAC1D6C,QAAAA,UAAU,GAAGH,KAAK,CAACE,aAAD,CAAlB;;AACA,YACC,OAAOC,UAAP,KAAsB,QAAtB,IACA,CAACS,KAAK,CAACC,OAAN,CAAcV,UAAd,CAFF,EAGE;AACD,gBAAM;AAAEd,YAAAA,IAAF;AAAQtB,YAAAA;AAAR,cAAkBqB,aAAa,CAACc,aAAD,CAArC;;AACA,cAAIb,IAAJ,EAAU;AACToB,YAAAA,eAAe,GAAG,EACjB,GAAGA,eADc;AAEjB,iBAAGN;AAFc,aAAlB;AAIA,WALD,MAKO,IAAIpC,KAAJ,aAAIA,KAAJ,eAAIA,KAAK,CAAEE,GAAX,EAAgB;AACtB,kBAAM,IAAI6C,KAAJ,CAAU,CAAA/C,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,GAAP,KAAc,eAAxB,CAAN;AACA;;AACDyC,UAAAA,aAAa,GAAG,KAAhB;AACA;AACD;;AACD,UAAIA,aAAJ,EAAmB;AAClBP,QAAAA,UAAU,GAAGH,KAAK,CAACE,aAAD,CAAlB;AACAD,QAAAA,cAAc,CAACC,aAAD,CAAd,GAAgCC,UAAhC;AACA;AACD;;AACDI,IAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBT,YAAY,CAAC,EAC/B,GAAGE,cAD4B;AAE/B,SAAGQ;AAF4B,KAAD,CAA/B;AAIA;;AACD,SAAOF,WAAP;AACA;;AAEM,SAASQ,MAAT,CAAgBV,MAAhB,EAAwB;AAC9B,QAAMW,gBAAgB,GAAG,MAAM;AAC9B,UAAMT,WAAW,GAAGH,eAAe,CAACC,MAAD,CAAnC;;AACA,UAAMY,UAAU,GAAGC,wBAAWH,MAAX,CAAkBR,WAAlB,CAAnB;;AACA,WAAOU,UAAP;AACA,GAJD;;AAKA,SAAO;AACND,IAAAA,gBADM;AAENX,IAAAA,MAAM,EAAEW,gBAAgB;AAFlB,GAAP;AAIA;;AAED,MAAMG,aAAa,GAAG,EACrB,GAAGD,uBADkB;AAErBH,EAAAA;AAFqB,CAAtB;eAKeI,a","sourcesContent":["import { Dimensions, StyleSheet } from \"react-native\";\n\nimport {\n\tcalculateSize,\n\tgetCurrentOrientation,\n\tisValidSize,\n} from \"./calculations\";\nimport { regexTest } from \"./utils\";\n\nconst isResponsiveKey =\n\t/^.*(?:\\(|\\)|min-|max-|-width|-height|orientation|landscape|portrait).*$/;\nconst styleRegex =\n\t/^\\(\\s*(?:(?:(?:(min|max)-(width|height)):\\s*(.*))|(orientation):\\s*(landscape|portrait))\\s*\\)$/;\n// const groupRegex = /(?<=\\))(?:\\s*(?:,)\\s*)(?=\\()/g;\n// const queryRegex = /(?<=\\))(?:\\s*(?:and)\\s*)/g;\nconst groupRegex = /\\)(?:\\s*(?:,)\\s*)\\(/g;\nconst queryRegex = /\\)(?:\\s*(?:and)\\s*)/g;\n\nconst extractGroups = (styleKey: string): string[] => {\n\tconst groups = styleKey.split(groupRegex);\n\tif (groups && groups.length > 0) {\n\t\tfor (let i = 0; i < groups.length; i += 1) {\n\t\t\tif (i > 0) {\n\t\t\t\tgroups[i] = `(${groups[i]}`;\n\t\t\t}\n\t\t\tif (i < groups.length - 1) {\n\t\t\t\tgroups[i] = `${groups[i]})`;\n\t\t\t}\n\t\t}\n\t}\n\treturn groups;\n};\nconst extractQuery = (group: string): string[] => {\n\tconst queries = group.split(queryRegex);\n\tif (queries && queries.length > 0) {\n\t\tfor (let i = 0; i < queries.length; i += 1) {\n\t\t\tif (i < queries.length - 1) {\n\t\t\t\tqueries[i] = `${queries[i]})`;\n\t\t\t}\n\t\t}\n\t}\n\treturn queries;\n};\n\nconst validateAndExtract = (styleCondition) => {\n\tconst styleKey = styleCondition?.toLowerCase()?.trim();\n\tconst error = {};\n\tconst results = [];\n\tif (!styleKey || styleKey.length === 0) {\n\t\terror.msg = \"String is required\";\n\t} else if (styleKey.startsWith(\"(\") && styleKey.endsWith(\")\")) {\n\t\tconst groups = extractGroups(styleKey);\n\t\tfor (let i = 0; i < groups.length; i += 1) {\n\t\t\tconst group = groups[i];\n\t\t\tconst groupResults = [];\n\t\t\tconst queries = extractQuery(group);\n\t\t\tconst conditions = [];\n\t\t\tlet breakFlag = false;\n\t\t\tfor (let j = 0; j < queries.length; j += 1) {\n\t\t\t\tconst query = queries[j];\n\t\t\t\tif (query && query.length > 0) {\n\t\t\t\t\tconst queryResult = regexTest(styleRegex, query);\n\t\t\t\t\tif (queryResult && queryResult.length > 0) {\n\t\t\t\t\t\tlet condition = queryResult[1];\n\t\t\t\t\t\tif (queryResult.length > 3) {\n\t\t\t\t\t\t\tcondition += `-${queryResult[2]}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst common = conditions.indexOf(condition);\n\t\t\t\t\t\tif (common > -1) {\n\t\t\t\t\t\t\terror.msg = `One group query cannot contain two condition for ${condition}: \"${group}`;\n\t\t\t\t\t\t\tbreakFlag = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconditions.push(condition);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (queryResult.length > 3) {\n\t\t\t\t\t\t\tconst size = queryResult[3];\n\t\t\t\t\t\t\tif (!isValidSize(size)) {\n\t\t\t\t\t\t\t\terror.msg = `Invalid Size: \"${size}\"`;\n\t\t\t\t\t\t\t\tbreakFlag = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror.msg = `Invalid Query: \"${query}\"`;\n\t\t\t\t\t\tbreakFlag = true;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tgroupResults.push(queryResult);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (breakFlag) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresults.push(groupResults);\n\t\t}\n\t} else {\n\t\tconst illegalPre = styleKey.slice(0, styleKey.indexOf(\"(\"));\n\t\tconst illegalPost = styleKey.slice(styleKey.lastIndexOf(\")\") + 1);\n\t\tconst illegal = illegalPre || illegalPost;\n\t\terror.msg = `Illegal Character(s): \"${illegal}\" in query: \"${styleKey}\"\"`;\n\t}\n\treturn { error, results };\n};\n\nexport const isStyleActive = (styleCondition) => {\n\tconst { results = [], error = {} } =\n\t\tvalidateAndExtract(styleCondition) || {};\n\tlet flag = false;\n\tif (\n\t\terror &&\n\t\tObject.keys(error).length === 0 &&\n\t\tresults &&\n\t\tresults.length > 0\n\t) {\n\t\tfor (let i = 0; i < results.length; i += 1) {\n\t\t\tconst group = results[i];\n\t\t\tlet isGroupActive = true;\n\t\t\tfor (let j = 0; j < group.length; j += 1) {\n\t\t\t\tconst query = group[j];\n\t\t\t\tconst condition = query[1];\n\t\t\t\tlet value = query[2];\n\t\t\t\tconst dimension = query[2];\n\t\t\t\tif (query.length > 3) {\n\t\t\t\t\tvalue = query[3];\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tcondition === \"orientation\" &&\n\t\t\t\t\tvalue === getCurrentOrientation()\n\t\t\t\t) {\n\t\t\t\t\tisGroupActive = isGroupActive && true;\n\t\t\t\t} else if (\n\t\t\t\t\t(condition === \"min\" || condition === \"max\") &&\n\t\t\t\t\t(dimension === \"height\" || dimension === \"width\")\n\t\t\t\t) {\n\t\t\t\t\tconst currentDimension =\n\t\t\t\t\t\tDimensions.get(\"window\")[dimension];\n\t\t\t\t\tconst calculatedSize = calculateSize(value);\n\t\t\t\t\tif (condition === \"min\") {\n\t\t\t\t\t\tisGroupActive =\n\t\t\t\t\t\t\tisGroupActive && currentDimension >= calculatedSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisGroupActive =\n\t\t\t\t\t\t\tisGroupActive && currentDimension < calculatedSize;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisGroupActive = isGroupActive && false;\n\t\t\t\t}\n\t\t\t\tif (!isGroupActive) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isGroupActive) {\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn { error, flag };\n};\n\nexport const formatStyles = (style) => {\n\tconst styleKey = Object.keys(style);\n\tconst formattedStyle = {};\n\tfor (let i = 0; i < styleKey.length; i += 1) {\n\t\tconst styleProperty = styleKey[i];\n\t\tconst styleValue = style[styleProperty];\n\t\tconst size = styleValue;\n\t\tif (isValidSize(size)) {\n\t\t\tconst calculatedSize = calculateSize(size);\n\t\t\tformattedStyle[styleProperty] = calculatedSize;\n\t\t} else {\n\t\t\tformattedStyle[styleProperty] = styleValue;\n\t\t}\n\t}\n\treturn formattedStyle;\n};\n\nfunction calculateStyles(styles) {\n\tconst stylesKey = Object.keys(styles);\n\tconst finalStyles = {};\n\tfor (let i = 0; i < stylesKey.length; i += 1) {\n\t\tconst key = stylesKey[i];\n\t\tconst style = styles[key];\n\t\tconst formattedStyle = {};\n\t\tlet responsiveStyle = {};\n\t\tconst styleKey = Object.keys(style);\n\t\tfor (let j = 0; j < styleKey.length; j += 1) {\n\t\t\tlet insertedStyle = true;\n\t\t\tconst styleProperty = styleKey[j];\n\t\t\tconst stylePropertyResult = regexTest(\n\t\t\t\tisResponsiveKey,\n\t\t\t\tstyleProperty\n\t\t\t);\n\t\t\tlet styleValue;\n\n\t\t\tif (stylePropertyResult && stylePropertyResult.length > 0) {\n\t\t\t\tstyleValue = style[styleProperty];\n\t\t\t\tif (\n\t\t\t\t\ttypeof styleValue === \"object\" &&\n\t\t\t\t\t!Array.isArray(styleValue)\n\t\t\t\t) {\n\t\t\t\t\tconst { flag, error } = isStyleActive(styleProperty);\n\t\t\t\t\tif (flag) {\n\t\t\t\t\t\tresponsiveStyle = {\n\t\t\t\t\t\t\t...responsiveStyle,\n\t\t\t\t\t\t\t...styleValue,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (error?.msg) {\n\t\t\t\t\t\tthrow new Error(error?.msg || \"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\tinsertedStyle = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (insertedStyle) {\n\t\t\t\tstyleValue = style[styleProperty];\n\t\t\t\tformattedStyle[styleProperty] = styleValue;\n\t\t\t}\n\t\t}\n\t\tfinalStyles[key] = formatStyles({\n\t\t\t...formattedStyle,\n\t\t\t...responsiveStyle,\n\t\t});\n\t}\n\treturn finalStyles;\n}\n\nexport function create(styles) {\n\tconst responsiveStyles = () => {\n\t\tconst finalStyles = calculateStyles(styles);\n\t\tconst stylesheet = StyleSheet.create(finalStyles);\n\t\treturn stylesheet;\n\t};\n\treturn {\n\t\tresponsiveStyles,\n\t\tstyles: responsiveStyles(),\n\t};\n}\n\nconst CssStyleSheet = {\n\t...StyleSheet,\n\tcreate,\n};\n\nexport default CssStyleSheet;\nexport * from \"./calculations\";\nexport { default as useCssStyleSheet } from \"./utils/useCssStyleSheet\";\nexport {\n\tdefault as withCssStyleSheet,\n\tWithCssStyleSheetProps,\n} from \"./utils/withCssStyleSheet\";\n"]}